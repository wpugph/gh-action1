name: Pantheon Build

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Cache
      id: cache
      uses: actions/cache@v1
      with:
        path: vendor
        key: ${{ runner.os }}-cache

    - name: Cache found
      if: steps.cache-vendor.outputs.cache-hit != 'true'
      run: |
        echo 'Cache found'
        ls

    - name: Pantheon Build
      id: cache-vendor
      run: |
        # Define BACKSTOPJS reference urls here
        export REFERENCE_SITE_URL='https://live-gh-action1.pantheonsite.io/'
        export QA_PANTHEONENV="qa1"
        # add machine token & sshkey in secret variables
        # further configure scripts/github/test/backstopjs/backstopConfig.js

        # Define Pantheon variables where build will be sent to 
        export PANTHEONENV="dev2"
        export PANTHEONSITENAME="gh-action1"

        # load hidden variables
        export PANTHEONSITEUUID="${{ secrets.PANTHEONSITEUUID }}"
        export PANTHEONEMAIL="${{ secrets.PANTHEONEMAIL }}"
        export QA_SITE_URL="https://$QA_PANTHEONENV-$PANTHEONSITENAME.pantheonsite.io/"
        export TEST_SITE_URL="https://$PANTHEONENV-$PANTHEONSITENAME.pantheonsite.io/"
        
        # setup SSH access
        export PATH="$PATH:$COMPOSER_HOME/vendor/bin"
        export PROJECT_ROOT="$(pwd)"
        export GITHUB_BRANCH=${GITHUB_REF##*heads/}
        export MACHINETOKEN="${{ secrets.MACHINETOKEN }}"
        printf "[\e[0;34mNOTICE\e[0m] Setting up SSH access to server for rsync usage.\n"
        SSH_DIR="$HOME/.ssh"
        mkdir -p "$SSH_DIR"
        chmod 700 "$SSH_DIR"
        touch "$SSH_DIR/id_rsa1"
        touch "$SSH_DIR/config"
        echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > "$SSH_DIR/config"
        echo "${{ secrets.STAGING_PRIVATE_KEY }}" > "$SSH_DIR/id_rsa1"
        chmod 600 "$SSH_DIR/id_rsa1"
        chmod 600 "$SSH_DIR/config"
        eval "$(ssh-agent -s)"
        ssh-add "$SSH_DIR/id_rsa1"
        ssh-add -l
        echo "SSH PRIVATE KEY IMPORTED!!!"

        sh $PROJECT_ROOT/scripts/github/setup-terminus
        
        # composer build and deploy backstopjs to QA site
        sh $PROJECT_ROOT/scripts/github/build-wp-composer

        # setup backstop script
        sh $PROJECT_ROOT/scripts/github/setup-backstop

        printf "[\e[0;34mNOTICE\e[0m] Build COMPLETE!!!.\n"

    - name: Cache test
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        echo $REFERENCE_SITE_URL
        echo "cache$REFERENCE_SITE_URL//"

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: vendor
        path: |
          vendor
          node_modules
  test:
   runs-on: ubuntu-latest

   run: |
        echo 'Games'