name: Pantheon Build

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      PANTHEONSITEUUID: "${{ secrets.PANTHEONSITEUUID }}"
      PANTHEONEMAIL: "${{ secrets.PANTHEONEMAIL }}"
      MACHINETOKEN: "${{ secrets.MACHINETOKEN }}"
      STAGING_PRIVATE_KEY: "${{ secrets.STAGING_PRIVATE_KEY }}"
      PROJECT_ROOT: "$(pwd)"

    steps:
    - uses: actions/checkout@v2

    - name: Cache
      id: cache
      uses: actions/cache@v1
      with:
        path: vendor
        key: ${{ runner.os }}-cache

    - name: Cache found
      if: steps.cache-vendor.outputs.cache-hit != 'true'
      run: |
        echo 'Cache found'
        ls web

    - name: Pantheon Build
      id: cache-vendor
      run: |
        
        export PROJECT_ROOT="$(pwd)"
        . $PROJECT_ROOT/config  

        sh $PROJECT_ROOT/scripts/github/load-variables

        sh $PROJECT_ROOT/scripts/github/setup-terminus

        # sh $PROJECT_ROOT/scripts/github/load-keys
        
        # composer build and deploy backstopjs to QA site
        # sh $PROJECT_ROOT/scripts/github/build-wp-composer

        sh $PROJECT_ROOT/scripts/github/setup-backstop

        printf "[\e[0;34mNOTICE\e[0m] Build COMPLETE!!!.\n"

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.STAGING_PRIVATE_KEY }}
        name: id_rsa # optional
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
        config: Host *\n\tStrictHostKeyChecking no\n\n
      run: |
        sh $PROJECT_ROOT/scripts/github/build-wp-composer

    - name: Cache test
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        echo $REFERENCE_SITE_URL
        echo "cache$REFERENCE_SITE_URL//"

    - name: Cache dependencies
      uses: actions/upload-artifact@v1
      with:
        name: vendor-dep
        path: |
          vendor

    - name: Upload custom code
      uses: actions/upload-artifact@v1
      with:
        name: custom-code
        path: |
          web/wp-content/themes/storefrontchild
  
  backstop-test:
    runs-on: ubuntu-latest
    steps:
    - name: Test build
      id: cache
      uses: actions/cache@v1
      with:
        path: vendor
        key: ${{ runner.os }}-cache
    
    - name: Cache found
      if: steps.cache-vendor.outputs.cache-hit != 'true'
      run: |
        echo 'Cache found'
        ls

  deploy-live:
    runs-on: ubuntu-latest
    steps:
    - name: Test build
      id: cache
      uses: actions/cache@v1
      with:
        path: vendor
        key: ${{ runner.os }}-cache
    
    - name: Cache found
      if: steps.cache-vendor.outputs.cache-hit != 'true'
      run: |
        echo 'Cache found'
        ls
  
  