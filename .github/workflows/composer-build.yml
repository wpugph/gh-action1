name: Pantheon Build

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      PANTHEONSITEUUID: "${{ secrets.PANTHEONSITEUUID }}"
      PANTHEONEMAIL: "${{ secrets.PANTHEONEMAIL }}"
      MACHINETOKEN: "${{ secrets.MACHINETOKEN }}"

    steps:
    - uses: actions/checkout@v2

    - name: Cache
      id: cache
      uses: actions/cache@v1
      with:
        path: vendor
        key: ${{ runner.os }}-cache

    - name: Cache found
      if: steps.cache-vendor.outputs.cache-hit != 'true'
      run: |
        echo 'Cache found'
        ls

    - name: Pantheon Build
      id: cache-vendor
      run: |
        
        export PROJECT_ROOT="$(pwd)"
        . $PROJECT_ROOT/config  

        sh $PROJECT_ROOT/scripts/github/load-variables

        # load hidden variables
        
        export QA_SITE_URL="https://$QA_PANTHEONENV-$PANTHEONSITENAME.pantheonsite.io/"
        export TEST_SITE_URL="https://$PANTHEONENV-$PANTHEONSITENAME.pantheonsite.io/"


        sh $PROJECT_ROOT/scripts/github/load-keys

        sh $PROJECT_ROOT/scripts/github/setup-terminus
        
        # composer build and deploy backstopjs to QA site
        sh $PROJECT_ROOT/scripts/github/build-wp-composer

        # setup backstop script
        sh $PROJECT_ROOT/scripts/github/setup-backstop

        printf "[\e[0;34mNOTICE\e[0m] Build COMPLETE!!!.\n"

    - name: Cache test
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        echo $REFERENCE_SITE_URL
        echo "cache$REFERENCE_SITE_URL//"

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: vendor
        path: |
          vendor
          node_modules
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Test build
      id: cache
      uses: actions/cache@v1
      with:
        path: vendor
        key: ${{ runner.os }}-cache
    
    - name: Cache found
      if: steps.cache-vendor.outputs.cache-hit != 'true'
      run: |
        echo 'Cache found'
        ls